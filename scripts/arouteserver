#!/usr/bin/env python

# Copyright (C) 2017 Pier Carlo Chiodi
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import logging
import sys

from pierky.arouteserver.commands import all_commands
from pierky.arouteserver.errors import ARouteServerError
from pierky.arouteserver.version import __version__, COPYRIGHT_YEAR

def main():

    parser = argparse.ArgumentParser(
        description="A Router Server v{}: a tool to automatically "
                    "build route servers configuration.".format(
                        __version__
                    ),
        epilog="Copyright (c) {} - Pier Carlo Chiodi - "
               "https://pierky.com".format(COPYRIGHT_YEAR)
    )

    sub_parsers = parser.add_subparsers(
        title="commands",
        help="Run 'arouteserver <command> -h' for more details.",
        dest="command")
    sub_parsers.required = True

    commands = {}
    for cmd_class in all_commands:
        cmd_class.attach_to_parser(sub_parsers)
        commands[cmd_class.COMMAND_NAME] = cmd_class

    args = parser.parse_args()

    if args.command in commands:
        return commands[args.command](args).run()
    else:
        raise NotImplementedError("Command unknown: {}".format(args.command))

try:
    if main():
        sys.exit(0)
    else:
        sys.exit(1)
except ARouteServerError as e:
    if str(e):
        logging.error("Error: {}".format(str(e)))
    sys.exit(1)
except Exception as e:
    logging.error(
        "An unexpected error occurred: {}\n"
        "\n"
        "Please consider reporting it using the URL below, "
        "including the following traceback and some "
        "hints on how to reproduce it: "
        "https://github.com/pierky/arouteserver/issues\n\n".format(str(e)),
        exc_info=True)
    sys.exit(1)
